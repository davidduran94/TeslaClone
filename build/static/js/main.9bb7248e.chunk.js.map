{"version":3,"sources":["features/car/carSlice.js","components/Header.js","components/Section.js","components/Home.js","App.jsx","app/store.js","serviceWorker.js","index.js"],"names":["carSlice","createSlice","name","initialState","cars","reducers","selectCars","state","car","Header","useState","burgerStatus","setBurgerStatus","useSelector","Container","src","map","index","href","RightMenu","CustomMenu","onClick","BurgerNav","show","CloseWrapper","CustomClose","styled","div","CloseIcon","props","MenuIcon","Menu","Section","title","description","leftBtnText","rightBtnText","image","Wrap","bgImage","bottom","ItemText","Buttons","ButtonGroup","LeftButton","RightButton","DownArrowContainer","DownArrow","img","Home","App","store","configureStore","reducer","carReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9bb7248e.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n    cars: [\n        \"Model S\",\n        \"Model 3\",\n        \"Model X\",\n        \"Model Y\"\n    ]\n}\n\nconst carSlice = createSlice({\n    name: \"car\",\n    initialState,\n    reducers: {}\n})\n\nexport const selectCars = state => state.car.cars;\nexport default carSlice.reducer;\n\n","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { selectCars } from '../features/car/carSlice'\n\n\nconst Header = () => {\n    const [burgerStatus, setBurgerStatus] = useState(false);\n    const cars = useSelector(selectCars);\n    \n    return (\n        <Container>\n            <a>\n                <img src='/assets/images/logo.svg' />\n            </a>\n            <Menu>\n                {cars && cars.map((car, index) => <p><a key={index} href='#'>{ car }</a></p>) }  \n            </Menu>\n            <RightMenu>\n                <a href='#'>Shop</a>\n                <a href='#'>Tesla Account</a>\n                <CustomMenu onClick={ () => setBurgerStatus(true) } />\n\n                <BurgerNav show={burgerStatus}>\n                    <CloseWrapper>\n                        <CustomClose onClick={ () => setBurgerStatus(false) } />\n                    </CloseWrapper>\n                    {cars && cars.map((car, index) => <li><a key={index} href='#'>{ car }</a></li>) }  \n\n                </BurgerNav>\n            </RightMenu>\n        </Container>\n    )\n}\n\nexport default Header\n\nconst CloseWrapper = styled.div`\n    display: flex;\n    justify-content: flex-end;\n`\nconst CustomClose = styled(CloseIcon)`\n    cursor: pointer;\n`\n\nconst BurgerNav = styled.div`\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    background-color: white;\n    width: 300px;\n    z-index: 16;\n    list-style: none;\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    text-align: start;\n    transform: ${props => props.show ? 'translateX(0)' : 'translateX(100%)' };\n    transition: transform 0.2s;\n    li{\n        padding: 15px 0;\n        border-bottom: 1px solid rgba(0,0,0,.2);\n\n        a{\n            font-weight: 600;\n        }\n    }\n    \n`\n\nconst CustomMenu = styled(MenuIcon)`\n    cursor: pointer;\n`\n\nconst RightMenu = styled.div`\n    display: flex;\n    align-items: center;\n    a {\n        font-weight: 600;\n        text-transform: uppercase;\n        margin-right: 10px; \n    }  \n`;\n\nconst Container = styled.div`\n    min-height: 60px;\n    position: fixed;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 20px;\n    top: 0;\n    left: 0;\n    right:0;\n    z-index: 1;\n`\n\nconst Menu = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex: 1;\n\n    @media(max-width: 768px) {\n        display:none;\n    }\n\n    a {\n        font-weight: 600;\n        text-transform: uppercase;\n        padding: 0 10px;\n        flex-wrap: nowrap;\n    }\n\n\n`","import React from 'react'\nimport styled from 'styled-components'\nimport Fade from 'react-reveal/Fade'\n\nfunction Section({ title, description, leftBtnText, rightBtnText, image }) { \n    return (\n        <Wrap bgImage={image}>\n            <Fade bottom>\n            <ItemText>\n                <h1>\n                    { title }\n                </h1>\n                <p>{ description }</p>\n            </ItemText>\n            <Buttons>\n                <Fade bottom>\n                    <ButtonGroup>\n                        <LeftButton>\n                            { leftBtnText }\n                        </LeftButton>\n                        { rightBtnText &&\n                            <RightButton>\n                                { rightBtnText }\n                            </RightButton>\n                        }\n                    </ButtonGroup>\n                </Fade>\n                <DownArrowContainer>\n                <DownArrow src='/assets/images/down-arrow.svg' />\n                </DownArrowContainer>\n            </Buttons>\n            </Fade>\n        </Wrap>\n    )\n }\n\nexport default Section\n\nconst DownArrow = styled.img`\n    margin-top: 0px;\n    height: 40px;   \n    animation: animateDown infinite 1.5s;\n`\nconst Buttons = styled.div``\n\nconst ButtonGroup = styled.div`\n    display: flex;\n    align-items: center; \n    justify-content: center;\n    width: 100vw;\n    margin-bottom: 30px;\n    @media (max-width: 768px ){ \n        flex-direction: column;\n     }\n`\n\nconst LeftButton = styled.div`\n    background-color: rgba(23, 26, 32, 0.8);\n    height: 40px;\n    width: 256px;\n    color: white;\n    display: flex;\n    justify-content: center;\n    align-items: center; \n    border-radius: 100px;\n    opacity: 0.85;\n    text-transform: uppercase;\n    font-size: 12px;\n    cursor: pointer;\n    margin: 20px;\n`\n\nconst RightButton = styled(LeftButton)`\n    background-color: white;\n    color: black;\n    opacity: 0.65;\n`\n\nconst Wrap = styled.div`\n    z-index: -1;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between; \n    align-items: center; \n    width: 100vw;\n    height: 100vh;\n    background-size: cover;\n    background-position: center; \n    background-repeat: no-repeat;\n    background-image: ${props => `url(/assets/images/${props.bgImage})`};      \n`\n\nconst ItemText = styled.div`\n    padding-top: 15vh;\n    text-align: center; \n`\n\nconst DownArrowContainer = styled(ButtonGroup)``","import React from 'react'\nimport styled from 'styled-components'\nimport Section from './Section'\n\nfunction Home() {\n    return ( \n        <Container>\n            <Section \n                title= \"Model S\"\n                description= \"Order Online for Touchless Delivery\"\n                image= \"model-s.jpg\"\n                leftBtnText=\"Custom Order\"\n                rightBtnText=\"Existing Inventory\"\n            />\n            \n            <Section \n                title= \"Model 3\"\n                description= \"Order Online for Touchless Delivery\"\n                image= \"model-3.jpg\"\n                leftBtnText=\"Custom Order\"\n                rightBtnText=\"Existing Inventory\"\n            />\n\n            <Section \n                title= \"Accesories\"\n                image= \"accessories.jpg\"\n                leftBtnText=\"Custom Order\"\n            />\n             \n        </Container>\n    )\n}\n\nexport default Home\n\nconst Container = styled.div`\n    height: 100vh;\n`","import React from 'react';\nimport './App.css';\nimport Header from './components/Header'\nimport Home from './components/Home'\n\nconst App = function () {\n  return (\n    <>\n      <Header />\n      <Home />\n    </>\n  );\n};\n\nexport default App;","import { configureStore } from '@reduxjs/toolkit';\nimport carReducer from '../features/car/carSlice';\n\nexport const store = configureStore({\n  reducer: {\n    car : carReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}